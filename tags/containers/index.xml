<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>containers on s9a.me</title><link>/tags/containers/</link><description>Recent content in containers on s9a.me</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/containers/index.xml" rel="self" type="application/rss+xml"/><item><title>Network Namespaces and Veth pairs</title><link>/posts/2022-12-14-network-namespaces-and-veth/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>/posts/2022-12-14-network-namespaces-and-veth/</guid><description>Containers are a thing now and microservices the new buzz word. But how do containers work? How are containers magically separated from each other?
VMs require an entire operating system running and therefore consumes memory and CPU. In fact, if I remember correctly, running a Ubuntu VM requires atleast 500-600mb of memory and at least one CPU core. But containers run in fraction of resources and provide almost similar features for an application developer.</description></item></channel></rss>