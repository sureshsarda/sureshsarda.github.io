<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Databases on s9a.me</title><link>https://s9a.me/tags/databases/</link><description>Recent content in Databases on s9a.me</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 15 Apr 2023 03:38:16 +0000</lastBuildDate><atom:link href="https://s9a.me/tags/databases/index.xml" rel="self" type="application/rss+xml"/><item><title>Fundamental Join Algorithms and IO Cost</title><link>https://s9a.me/posts/databases/2022-12-24-fundamental-join-algorithms/</link><pubDate>Sat, 24 Dec 2022 00:00:00 +0000</pubDate><guid>https://s9a.me/posts/databases/2022-12-24-fundamental-join-algorithms/</guid><description>Joins are integral part of relational databases and they are designed to do them well.
There are few considerations before we join two table which can make a lot of difference on the performance of the query - whether there is an index present, what are the sizes of table? Can one table be fit in memory or whether an external disk sort could be required to perform the join efficiently.</description></item><item><title>Types of Indexes</title><link>https://s9a.me/posts/databases/type-of-indexes/</link><pubDate>Sat, 24 Dec 2022 00:00:00 +0000</pubDate><guid>https://s9a.me/posts/databases/type-of-indexes/</guid><description>Database indexes may make or break your query. Learn about various kinds of indexes in this post and when they are best suited.
Indexes can be broadly categorized in two categories - sorted and hash based. Sorted are generally backed by tree based data structure and support range queries (salary &amp;gt; 10,000) whereas hash indexes are like hash maps, best suited for lookups (salary = 10,000).
flowchart TB A[Indices] --&amp;gt; B[Sorted Indices] A --&amp;gt; C[Hash Based Indices] Ordered Indices An Ordered Index stores values in sorted order like phone numbers in a directory or index of a book.</description></item></channel></rss>