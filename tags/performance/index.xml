<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Performance on s9a.me</title><link>https://s9a.me/tags/performance/</link><description>Recent content in Performance on s9a.me</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 23 Aug 2022 09:23:11 +0530</lastBuildDate><atom:link href="https://s9a.me/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Elasticsearch Bulk API Example and Performance Comparison</title><link>https://s9a.me/posts/elasticsearch/2017-04-14-elasticsearch-bulk-api-example-and-performance-comparison/</link><pubDate>Fri, 14 Apr 2017 10:14:10 +0000</pubDate><guid>https://s9a.me/posts/elasticsearch/2017-04-14-elasticsearch-bulk-api-example-and-performance-comparison/</guid><description>Elasticsearch provides bulk operations to perform multiple operations in a single call. Bulk APIs can be accessed by hitting the _bulk endpoint. This post demonstrates the use of bulk API with Python. It assumes that you are familiar (not expert) with REST Bulk API of Elasticsearch. To keep it simple we will just consider the insertion case.
Problem Statement Before we jump into code, letâ€™s take a minute and think about the problem in hand.</description></item></channel></rss>