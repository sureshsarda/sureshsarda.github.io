<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming languages on s9a.me</title><link>/tags/programming-languages/</link><description>Recent content in programming languages on s9a.me</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 13 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/programming-languages/index.xml" rel="self" type="application/rss+xml"/><item><title>Proxy Interfaces In Java</title><link>/posts/2023-12-13-proxy-interfaces/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><guid>/posts/2023-12-13-proxy-interfaces/</guid><description>Java provides a static method Proxy.newProxyInstance as part of it&amp;rsquo;s Reflection API. This static method returns a proxy class for a given set of interfaces. It requires only 3 things:
A class loader A list of interfaces that this proxy should implement An InvacationHandler. This is like a callback which is invoked when methods on this proxy are called. Proxy Class Properties The proxy classes are public, final and non-abstract This proxy classes extend java.</description></item></channel></rss>