<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on s9a.me</title><link>https://s9a.me/tags/testing/</link><description>Recent content in Testing on s9a.me</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 25 Jan 2023 08:46:58 +0530</lastBuildDate><atom:link href="https://s9a.me/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating TestContainers from Dockerfile and DSL</title><link>https://s9a.me/posts/2023-01-07-test-containers-from-dockerfile-and-dsl/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://s9a.me/posts/2023-01-07-test-containers-from-dockerfile-and-dsl/</guid><description>Containers make the job of writing integration test cases quite easy which rely on a tool like a database or cloud infrastructure or any other tool for that matter. Test containers take it a step further but letting us create containers from the code itself.
There is another neat trick in TestContainers that let’s us create the containers on the fly. From Dockerfile or directly by declaring the container spec with Java using a DSL.</description></item><item><title>Create a service mocking framework around Proxy.newProxyInstance</title><link>https://s9a.me/posts/2022-12-17-proxy-new-instance-json-mock-utility/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://s9a.me/posts/2022-12-17-proxy-new-instance-json-mock-utility/</guid><description>Introducing Proxy.newProxyInstance The Java Reflection API provides a helper method to create proxy implementation (substitute or placeholder for another object[1]) of any class.
The idea is to provide a list of classes or interfaces that this new proxy would inherit/implement and provide a callback which will be invoked every time the proxy is called.
Code Example With this knowledge and the documentation, let’s see if this in action and understand more from there.</description></item></channel></rss>