<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Programming Notes</title>
    <link>https://sureshsarda.in/categories/Python/</link>
    <description>Recent content in Python on Programming Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Nov 2018 10:00:00 +0000</lastBuildDate><atom:link href="https://sureshsarda.in/categories/Python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pandas: Splitting (Exploding) a column into multiple rows</title>
      <link>https://sureshsarda.in/posts/2018-11-21-pandas-splitting-exploding-string-column-into-multiple-rows/</link>
      <pubDate>Wed, 21 Nov 2018 10:00:00 +0000</pubDate>
      
      <guid>https://sureshsarda.in/posts/2018-11-21-pandas-splitting-exploding-string-column-into-multiple-rows/</guid>
      <description>Recently, while working with on something in my office, I faced a small but interesting problem. I had to clean some data and the data was not normalized. In one of the columns, a single cell had multiple comma seperated values. I could not find out the distribution of how frequently the value was appearing without splitting these cells into individual cells of their own; creating new rows.
Example:
# Input data: EmployeeId, City 001, Mumbai|Bangalore 002, Pune|Mumbai|Delhi 003, Mumbai|Bangalore 004, Mumbai|Pune 005, Bangalore .</description>
    </item>
    
    <item>
      <title>Boilerplate - Logging in Python</title>
      <link>https://sureshsarda.in/posts/2017-08-03-boilerplate-for-logging-in-python/</link>
      <pubDate>Thu, 03 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sureshsarda.in/posts/2017-08-03-boilerplate-for-logging-in-python/</guid>
      <description>This is how all my Python scripts look like when they start:
import logging logging.basicConfig(level=logging.DEBUG) logger = logging.getLogger(__name__) logger.debug(&amp;#39;Log message&amp;#39;) Nothing much but I prefer logging over print statements. Whenever I want to move this small script to larger project, I don&amp;rsquo;t have to make lot of changes. Logging also offers more control over the messages and what messages to print or skip.</description>
    </item>
    
  </channel>
</rss>
